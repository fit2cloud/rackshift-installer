#!/bin/bash
installLog=./install.log
compose_file=/opt/rackshift/docker-compose.yml
cmd=$@

function usage() {
  echo "RackShift 控制脚本"
  echo
  echo "Usage: "
  echo "  rsctl [COMMAND] [ARGS...]"
  echo "  rsctl --help"
  echo
  echo "Commands: "
  echo "  status    查看 RackShift 服务运行状态"
  echo "  start     启动 RackShift 服务"
  echo "  stop      停止 RackShift 服务"
  echo "  restart   重启 RackShift 服务"
  echo "  reload    重新加载 RackShift 服务"
  echo "  reconfig  重设 RackShift 服务 IP（PXE 网卡） 地址"
  echo "  upgrade   升级 RackShift 至最新版本"
  echo "  uninstall 卸载 RackShift 服务"
  echo "  version   查看 RackShift 版本信息"
}

function compose() {
  docker-compose -f $compose_file $@
}

function main() {

  case "$1" in

  start)

    echo "starting RackShift Service..."
    compose start
    ;;

  stop)

    echo "Stopping RackShift Service..."
    compose stop
    ;;

  restart)
    compose restart
    ;;

  reload)
    compose up -d
    ;;

  status)
    compose ps
    ;;

  upgrade)
    os=$(uname -a)

    # 不支持MacOS
    if [[ $os =~ 'Darwin' ]]; then
      echo 暂时不支持 MacOS 安装
    else
      VERSION=$(curl -s https://github.com/rackshift/rackshift/releases/latest/download 2>&1 | grep -Po '[0-9]+\.[0-9]+\.[0-9]+.*(?=")')
    fi

    if [ ! -f /tmp/rackshiftV${VERSION}.tar.gz ]; then
      wget --no-check-certificate https://github.com/rackshift/rackshift/releases/latest/download/rackshiftV${VERSION}.tar.gz -O /tmp/rackshiftV${VERSION}.tar.gz
    fi
    cd /tmp
    tar zxvf rackshiftV${VERSION}.tar.gz
    cd rackshiftV${VERSION}/installer

    /bin/bash install.sh
    cd /tmp && rm -rf rackshiftV${VERSION}
    ;;

  uninstall)
    compose down
    ;;

  version)
    cat cat /opt/rackshift/rackhd/conf/version
    ;;

  usage)
    usage
    ;;

  --help)
    usage
    ;;

  reconfig)
    echo "请重新输入 RackShift 服务器 IP（PXE 网卡） 地址："
    read serverIp
    cp /opt/rackshift/rackhd/monorail/config.json.bak /opt/rackshift/rackhd/monorail/config.json
    sed -i "s/172.31.128.1/${serverIp}/g" /opt/rackshift/rackhd/monorail/config.json
    sql="update endpoint set ip='${serverIp}' where type='main_endpoint limit 1'"
    pwd=$(cat $compose_file | grep MYSQL_ROOT_PASSWORD | awk -F ' ' '{print $2}')
    docker exec rackshift_mysql_1 mysql -uroot -p$pwd rackshift -e "$sql" >>$installLog 2>>1
    if [ $? -eq 0 ]; then
      echo "修复服务器 IP 成功 !正在重启服务..."
      compose restart
    else
      echo "修复服务器 IP 失败 !请确保 rackshift_mysql_1 服务是正常运行状态， 详细日志请查看 $installLog"
    fi
    ;;

  esac
}

if [ ! $1 ]; then
  usage
else
  main $1
fi
